name: NuitkaBuild

on:
  # workflow_dispatch:
  #   inputs:
  #     python-version:
  #       description: 'Python version (e.g., 3.9)'
  #       required: false
  #       default: '3.9'
  #     nuitka-options:
  #       description: 'Nuitka options (e.g., --standalone)'
  #       required: false
  #       default: '--standalone --show-progress --show-memory --remove-output --follow-imports --lto=yes --windows-disable-console'
  #     output-dir:
  #       description: 'Output directory'
  #       required: false
  #       default: 'dist' # 使用相对路径
  #     file-name:
  #       description: 'Python file name to compile (e.g., main.py)'
  #       required: true
  #       default: 'DBC_Tool.py'
  push:
    tags:
      - 'v*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code with current tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      # Install Build Tools - IMPORTANT
      - name: Install Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1.1
        
      
      - name: Install dependencies
        shell: pwsh
        run: |
          pip install --upgrade pip
          pip install nuitka
          pip install scapy
      
      # - name: Install 7z
      #   uses: milliewalky/setup-7-zip@v2
        # with:
        #   # Add 7z to the PATH
        #   path: true



      # - name: Get Python executable path
      #   run: |
      #     python -c "from PyQt5.QtCore import QLibraryInfo; print(QLibraryInfo.location(QLibraryInfo.PluginsPath))"

      # - name: Set Qt Plugins Path Environment Variable
      #   id: set_qt_path
      #   run: |
      #     $qt_plugins_path = python -c "from PyQt5 import QtCore; print(QtCore.QLibraryInfo.location(QtCore.QLibraryInfo.PluginsPath))"
      #     echo "QT_PLUGINS_PATH=$qt_plugins_path" >> $env:GITHUB_ENV
      #   shell: pwsh

      - name: Compile with Nuitka
        shell: pwsh
        run:
          python -m nuitka --assume-yes-for-downloads
          --standalone --show-progress --show-memory --remove-output --follow-imports --lto=yes
          --include-data-files="${{ github.workspace }}/data/ecu_data.json=data/ecu_data.json"
          --include-data-files="${{ github.workspace }}/data/services.json=data/services.json"
          --output-dir="${{ github.workspace }}/dist"
          main.py
#      - name: Compile with Nuitka
#        shell: pwsh
#        run:
#          python -m nuitka --assume-yes-for-downloads
#          --standalone --show-progress --show-memory --remove-output --follow-imports --plugin-enable=pyqt5 --lto=yes --windows-disable-console
#          --include-data-files="${{ github.workspace }}/DBC_Tool_Excel2DBC_Template.xlsx=DBC_Tool_Excel2DBC_Template.xlsx"
#          --include-data-files="${{ github.workspace }}/dbc_template/DBC_Template.dbc=dbc_template/DBC_Template.dbc"
#          --output-dir="${{ github.workspace }}/dist"
#          --windows-icon-from-ico=${{ github.workspace }}/icon.ico
#          DBC_Tool.py

      # Uploads artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: SomeIPClient
          path: dist
          include-hidden-files: true

      # 获去最新的tag号
      - name: Get tag name
        id: get_tag
        run: |
          $current_tag = git describe --tags --abbrev=0 HEAD
          echo "tag=${current_tag}" >> $env:GITHUB_ENV
      
      # - name: List files
      #   run: |
      #     ls

      - name: rename build file
        run: |
          Rename-Item -Path "dist" -NewName "SomeIPClient_${{ env.tag }}"

      # - name: List files
      #   run: |
      #     ls

      
      
      - name: Zip the dist folder
        run: |
          7z a -t7z SomeIPClient-${{ env.tag }}.7z SomeIPClient_${{ env.tag }}  # 压缩 SomeIPClient_${{ env.tag }} 文件夹为 DBC_Tool-${{ env.tag }}.7z

      # - name: List files
      #   run: |
      #     ls

      # 创建github release号
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag }}
          release_name: Release ${{ env.tag }}
          draft: false
          prerelease: false

      # 上传编译文件
      - name: Upload Artifact to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/SomeIPClient-${{ env.tag }}.7z #runner 本地文件路径
          asset_name: SomeIPClient-${{ env.tag }}.7z  # 使用标签作为文件名的一部分
          asset_content_type: application/7z



#      - name: 在目标仓库创建发布
#        id: create_release_target
#        uses: softprops/action-gh-release@v1
#        with:
#          repository: YEZZESDXHN/DBCTool_Public
#          tag_name: ${{ env.tag }}
#          # release_name: Release ${{ inputs.tag }}
#          body: Release ${{ env.tag }}
#          token: ${{ secrets.DBCTOOL_PUBLIC_SYN }}
#          files: DBC_Tool-${{ env.tag }}.7z